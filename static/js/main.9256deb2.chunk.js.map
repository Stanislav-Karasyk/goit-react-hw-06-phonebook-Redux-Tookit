{"version":3,"sources":["redux/contact/contact-actions.js","redux/contact/contact-reducer.js","redux/store.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["createContact","createAction","name","number","payload","id","uuidv4","addFilterValue","deleteContact","contacts","createReducer","state","filter","item","_","combineReducers","store","configureStore","reducer","contact","contactReducer","devTools","process","ContactForm","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","onCreateContact","this","onSubmit","type","onChange","Component","connect","dispatch","toLowerCase","includes","onHandleChange","map","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAGMA,EAAgBC,YACpB,yBACA,YAAuB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACP,MAAO,CACLC,QAAS,CACPF,OACAG,GAAIC,cACJH,cAMFI,EAAiBN,YAAa,0BAE9BO,EAAgBP,YAAa,yBCd7BQ,EAAWC,YAAc,IAAD,mBAC3BV,GAAgB,SAACW,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OADxB,cAE3BI,GAAgB,SAACG,EAAD,OAAUP,EAAV,EAAUA,QAAV,mBACZO,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKR,KAAOD,SAHV,IAOxBQ,EAASF,YAAc,GAAD,eACzBH,GAAiB,SAACO,EAAD,YAAMV,YAGXW,cAAgB,CAC7BN,WACAG,WCPaI,EAPDC,YAAe,CAC3BC,QAAS,CACPC,QAASC,GAEXC,UAAUC,I,uCCHNC,E,4MACJZ,MAAQ,CACNT,KAAM,GACNC,OAAQ,I,EAGVqB,YAAc,SAAAC,GAAM,IAAD,EACOA,EAAEC,OAAlBxB,EADS,EACTA,KAAMyB,EADG,EACHA,MACd,EAAKC,SAAL,eAAiB1B,EAAOyB,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,gBAAgB,EAAKrB,OAChC,EAAKiB,SAAS,CAAE1B,KAAM,GAAIC,OAAQ,M,4CAGpC,WAAU,IAAD,EACkB8B,KAAKtB,MAAtBT,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,uBAAM+B,SAAUD,KAAKJ,aAArB,UACE,yCAEE,uBACE3B,KAAK,OACLiC,KAAK,OACLC,SAAUH,KAAKT,YACfG,MAAOzB,OAGX,2CAEE,uBACEA,KAAK,SACLiC,KAAK,OACLC,SAAUH,KAAKT,YACfG,MAAOxB,OAGX,wBAAQgC,KAAK,SAAb,iC,GAvCkBE,aAkDXC,cAAQ,MALI,SAAAC,GAAQ,MAAK,CACtCP,gBAAiB,gBAAG9B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACfoC,EAASvC,EAAc,CAAEE,OAAMC,gBAGpBmC,CAAkCf,GCpBlCe,eALS,SAAA3B,GAAK,MAAK,CAChCF,SAAUE,EAAMQ,QAAQV,SAASG,QAAO,SAAAO,GAAO,OAC7CA,EAAQjB,KAAKsC,cAAcC,SAAS9B,EAAMQ,QAAQP,OAAO4B,sBANlC,SAAAD,GAAQ,MAAK,CACtC/B,cAAe,SAAAH,GAAE,OAAIkC,EAAS/B,EAAcH,QAQ/BiC,EA9BK,SAAC,GAAiC,IAA/B7B,EAA8B,EAA9BA,SAAUD,EAAoB,EAApBA,cACzBkC,EAAiB,SAAAjB,GACrBjB,EAAciB,EAAEC,OAAOrB,KAGzB,OACE,6BACGI,EAASkC,KAAI,gBAAGzC,EAAH,EAAGA,KAAMG,EAAT,EAASA,GAAIF,EAAb,EAAaA,OAAb,OACZ,6BACE,8BACGD,EADH,KACWC,EACT,wBAAQE,GAAIA,EAAI8B,KAAK,SAASS,QAASF,EAAvC,wBAHKrC,WCaFiC,eARS,SAAA3B,GAAK,MAAK,CAChCC,OAAQD,EAAMQ,QAAQP,WAGG,SAAA2B,GAAQ,MAAK,CACtChC,eAAgB,SAAAoB,GAAK,OAAIY,EAAShC,EAAeoB,QAGpCW,EArBA,SAAC,GAAgC,IAA9B1B,EAA6B,EAA7BA,OAAQL,EAAqB,EAArBA,eAKxB,OACE,0DAEE,uBAAOL,KAAK,SAASiC,KAAK,OAAOC,SAPd,SAACX,GACtBlB,EAAekB,EAAEC,OAAOC,QAMqCA,MAAOf,UCKzDiC,EAZH,WACV,OACE,qCACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJiC,SAASC,eAAe,W","file":"static/js/main.9256deb2.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst createContact = createAction(\r\n  'contact/createContact',\r\n  ({ name, number }) => {\r\n    return {\r\n      payload: {\r\n        name,\r\n        id: uuidv4(),\r\n        number,\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nconst addFilterValue = createAction('contact/addFilterValue');\r\n\r\nconst deleteContact = createAction('contact/deleteContact');\r\n\r\nexport { createContact, addFilterValue, deleteContact };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { createContact, addFilterValue, deleteContact } from './contact-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [createContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => [\r\n    ...state.filter(item => item.id !== payload),\r\n  ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [addFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contact/contact-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {createContact} from '../../redux/contact/contact-actions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onCreateContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={this.handleInput}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            onChange={this.handleInput}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCreateContact: ({ name, number }) =>\r\n    dispatch(createContact({ name, number })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contact/contact-actions';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  const onHandleChange = e => {\r\n    deleteContact(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n            <button id={id} type=\"button\" onClick={onHandleChange}>\r\n              Delete\r\n            </button>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contact.contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(state.contact.filter.toLowerCase()),\r\n  ),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addFilterValue } from '../../redux/contact/contact-actions';\r\n\r\nconst Filter = ({ filter, addFilterValue }) => {\r\n  const onHandleChange = (e) => {\r\n    addFilterValue(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input name=\"filter\" type=\"text\" onChange={onHandleChange} value={filter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contact.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addFilterValue: value => dispatch(addFilterValue(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}